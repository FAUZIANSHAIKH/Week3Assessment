package com.sapient.service;
import com.sapient.dao.UserDAO;
import com.sapient.model.User;
//import com.sapient.repository.ProductRepository;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Component;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Optional;

import javax.transaction.Transactional;

@Service(value = "employeeService")

	public class UserServiceImpl implements UserService {

	    @Autowired( required = true)
	    @Qualifier(value = "HybernateDAOImpl")
	    private UserDAO userDAO;
	    
	    @Autowired
	    private UserRepository userRepository;
	    
	    public UserServiceImpl(@Qualifier(value="JPIRepository")ProductRepository productRepository)
	    {
	    	this.userRepository=userRepository;
	    }
	    
	    @Transactional
	    public User saveProduct(User user) {
	        System.out.println("Inside the save employee method of Employee service class ....");
	        
	        return userRepository.save(user);
	    }
	    @Transactional
	    public List<User> fetchAllEmployees() {
	    	System.out.println("MYSQL Service");
	        return (List<User>) userRepository.findAll();
	    }
	    
	    @Transactional
	    public User findById(int id) {
	    	Optional<Product> optionalProduct=userRepository.findById(id);
	    	if(optionalProduct.isPresent())
	    	{
	    		return optionalProduct.get();
	    	}
	        return null;
	    }
	    @Transactional
	    public void deleteUser(int id) {
	    	userRepository.deleteById(id);
	    }

	    @Transactional
		public void updateUser(int id, User user) {
	    	Optional<User> optionalProduct=userRepository.findById(id);
	    	if(optionalProduct.isPresent())
	    	{
	    		User currProd= optionalProduct.get();
	    		currProd.setId(user.getId());
	    		currProd.setName(user.getName());
	    		currProd.setAddress(user.getAddress());
	    		userRepository.save(currProd);
	    	}
	       
//			System.out.println(product.getName());
//			productRepository.save(product);
			
		}
		
		
	}

